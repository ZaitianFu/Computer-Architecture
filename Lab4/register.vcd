$date
	Mon Feb  5 22:34:23 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 32 ! q [31:0] $end
$var reg 1 " clk $end
$var reg 32 # d [31:0] $end
$var reg 1 $ enable $end
$var reg 5 % regnum [4:0] $end
$var reg 1 & reset $end
$scope module reg1 $end
$var wire 1 " clk $end
$var wire 32 ' d [31:0] $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var wire 32 ( q [31:0] $end
$scope module d0 $end
$var wire 1 " clk $end
$var wire 1 ) d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 * q $end
$upscope $end
$scope module d1 $end
$var wire 1 " clk $end
$var wire 1 + d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 , q $end
$upscope $end
$scope module d10 $end
$var wire 1 " clk $end
$var wire 1 - d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 . q $end
$upscope $end
$scope module d11 $end
$var wire 1 " clk $end
$var wire 1 / d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 0 q $end
$upscope $end
$scope module d12 $end
$var wire 1 " clk $end
$var wire 1 1 d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 2 q $end
$upscope $end
$scope module d13 $end
$var wire 1 " clk $end
$var wire 1 3 d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 4 q $end
$upscope $end
$scope module d14 $end
$var wire 1 " clk $end
$var wire 1 5 d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 6 q $end
$upscope $end
$scope module d15 $end
$var wire 1 " clk $end
$var wire 1 7 d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 8 q $end
$upscope $end
$scope module d16 $end
$var wire 1 " clk $end
$var wire 1 9 d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 : q $end
$upscope $end
$scope module d17 $end
$var wire 1 " clk $end
$var wire 1 ; d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 < q $end
$upscope $end
$scope module d18 $end
$var wire 1 " clk $end
$var wire 1 = d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 > q $end
$upscope $end
$scope module d19 $end
$var wire 1 " clk $end
$var wire 1 ? d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 @ q $end
$upscope $end
$scope module d2 $end
$var wire 1 " clk $end
$var wire 1 A d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 B q $end
$upscope $end
$scope module d20 $end
$var wire 1 " clk $end
$var wire 1 C d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 D q $end
$upscope $end
$scope module d21 $end
$var wire 1 " clk $end
$var wire 1 E d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 F q $end
$upscope $end
$scope module d22 $end
$var wire 1 " clk $end
$var wire 1 G d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 H q $end
$upscope $end
$scope module d23 $end
$var wire 1 " clk $end
$var wire 1 I d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 J q $end
$upscope $end
$scope module d24 $end
$var wire 1 " clk $end
$var wire 1 K d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 L q $end
$upscope $end
$scope module d25 $end
$var wire 1 " clk $end
$var wire 1 M d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 N q $end
$upscope $end
$scope module d26 $end
$var wire 1 " clk $end
$var wire 1 O d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 P q $end
$upscope $end
$scope module d27 $end
$var wire 1 " clk $end
$var wire 1 Q d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 R q $end
$upscope $end
$scope module d28 $end
$var wire 1 " clk $end
$var wire 1 S d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 T q $end
$upscope $end
$scope module d29 $end
$var wire 1 " clk $end
$var wire 1 U d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 V q $end
$upscope $end
$scope module d3 $end
$var wire 1 " clk $end
$var wire 1 W d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 X q $end
$upscope $end
$scope module d30 $end
$var wire 1 " clk $end
$var wire 1 Y d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 Z q $end
$upscope $end
$scope module d31 $end
$var wire 1 " clk $end
$var wire 1 [ d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 \ q $end
$upscope $end
$scope module d4 $end
$var wire 1 " clk $end
$var wire 1 ] d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 ^ q $end
$upscope $end
$scope module d5 $end
$var wire 1 " clk $end
$var wire 1 _ d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 ` q $end
$upscope $end
$scope module d6 $end
$var wire 1 " clk $end
$var wire 1 a d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 b q $end
$upscope $end
$scope module d7 $end
$var wire 1 " clk $end
$var wire 1 c d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 d q $end
$upscope $end
$scope module d8 $end
$var wire 1 " clk $end
$var wire 1 e d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 f q $end
$upscope $end
$scope module d9 $end
$var wire 1 " clk $end
$var wire 1 g d $end
$var wire 1 $ enable $end
$var wire 1 & reset $end
$var reg 1 h q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0h
xg
0f
xe
0d
xc
0b
xa
0`
x_
0^
x]
0\
x[
0Z
xY
0X
xW
0V
xU
0T
xS
0R
xQ
0P
xO
0N
xM
0L
xK
0J
xI
0H
xG
0F
xE
0D
xC
0B
xA
0@
x?
0>
x=
0<
x;
0:
x9
08
x7
06
x5
04
x3
02
x1
00
x/
0.
x-
0,
x+
0*
x)
b0 (
bx '
1&
bx %
0$
bx #
0"
b0 !
$end
#5
1"
#10
0"
0&
#15
1"
#20
0)
0+
0A
1W
1]
0_
1a
0c
0e
0g
0-
0/
01
03
05
07
09
0;
0=
0?
0C
0E
0G
0I
0K
0M
0O
0Q
0S
0U
0Y
0[
0"
b1011000 #
b1011000 '
b10 %
1$
#25
1X
1^
b1011000 !
b1011000 (
1b
1"
#30
1)
0"
b1011001 #
b1011001 '
0$
#35
1"
#40
0b
0^
b0 !
b0 (
0X
0)
1+
0"
b1011010 #
b1011010 '
1&
#45
1"
#50
1)
0"
b1011011 #
b1011011 '
1$
#55
1"
#60
0)
0+
1A
0"
b1011100 #
b1011100 '
0&
#65
1B
1X
1^
b1011100 !
b1011100 (
1b
1"
#70
0"
#75
1"
#80
0"
#85
1"
#90
0"
#95
1"
#100
0"
#105
1"
#110
0"
